AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-python-crud-api

  Sample SAM Template for sam-python-crud-api
Globals:
  Function:
    Timeout: 10
    MemorySize: 128
    Runtime: python3.9
    Tracing: Active
    Architectures:
      - x86_64
    Environment:
      Variables:
        DYNAMODB_TABLE: !Ref Table
        REGION_NAME: !Ref Region
  Api:
    TracingEnabled: True #adds xray tracing

Parameters:
  Table:
    Type: String
    Default: Posts
  Region:
    Type: String
    Default: us-east-1

Resources:
  CreatePostFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handler/create_post
      Handler: app.lambda_handler
      Runtime: python3.9
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PostsTable
      Events:
        CreatePost:
          Type: Api
          Properties:
            Path: /hello
            Method: get

  DeletePostFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handler/delete_post
      Handler: app.lambda_handler
      Runtime: python3.9
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PostsTable
      Events:
        DeletePost:
          Type: Apo
          Properties:
            Path: /posts/{id}
            Method: delete

  GetPostFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handler/get_post
      Handler: app.lambda_handler
      Runtime: python3.9
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PostsTable
      Events:
        GetPost:
          Type: Api
          Properties:
            Path: /posts/{id}
            Method: get
  ListPostsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handler/list_posts
      Handler: app.lambda_handler
      Runtime: python3.9
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PostsTable
      Events:
        ListPosts:
          Type: Api
          Properties:
            Path: /posts/
            Method: get
  UpdatePostFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handler/update_post
      Handler: app.lambda_handler
      Runtime: python3.9
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PostsTable
      Events:
        UpdatePost:
          Type: Api
          Properties:
            Path: /posts/{id}
            Method: put
  PostsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName: !Ref Table

Outputs:
  PostCrudAPI:
    Description: "API Gateway endpoint URL for Prod stage for REST API functions"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/posts/"
  CreatePostFunction:
    Description: "Create Post Lambda Function ARN"
    Value: !GetAtt CreatePostFunction.Arn